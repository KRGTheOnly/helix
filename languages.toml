[[language]]
name = "cpp"
file-types = ["cpp", "c"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
language-server = { command = "clangd-12" }

[[language]]
name = "markdown"
injection-regex = "md|markdown"
file-types = ["md", "markdown", "PULLREQ_EDITMSG"]
roots = [".marksman.toml"]
indent = { tab-width = 4, unit = "    " }
language-server = { command = "marksman", args=["server"] }

[[language]]
name = "python"
file-types = ["py"]
comment-token = "#"
roots = ["pyproject.toml"]
indent = { tab-width = 4, unit = "    " }
language-server = { command = "pyright-langserver", args = ["--stdio"] }
config = {}

[[language]]
name = "zig"
file-types = ["zig"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
language-server = { command = "zls" }

[[language]]
name = "v"
file-types = ["v", "vv", "vsh"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
language-server = { command = "v-analyzer" }

[[language]]
name = "odin"
scope = "scope.odin"
file-types = ["odin"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
language-server = { command = "ols" }
injection-regex = "odin"
roots = ["ols.json"]
formatter = { command = "odinfmt", args = [ "-stdin", "true" ] }

[[languages]]
name = "go"
auto-format = true
formatter = { command = "goimports" }

[[language]]
name = "haskell"
scope = "source.haskell"
injection-regex = "haskell"
file-types = ["hs", "hs-boot"]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
# language-servers = [ "haskell-language-server" ]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "gdscript"
language-server = { command = "nc", args = [
  "127.0.0.1",
  "6005",
], language-id = "gdscript" }

[[language]]
name = "javascript"
file-types = ["js", "ts"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
language-server = { command = "vscode-eslint-language-server", args=["--stdio"] } 

[[language]]
name = "css"
file-types = ["css"]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "json"
file-types = ["json"]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "html"
file-types = ["html"]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "astro"
file-types = ["astro"]
scope = "source.astro"
injection-regex = "astro"
indent = { tab-width = 4, unit = "    " }
roots = ["package.json", "astro.config.mjs"]
# language-server = { command = "astro-ls", args = ["--stdio"] }
# config = { "typescript" = { serverPath = "/home/krg/OneFolder/Projects/astro-test-blog/node_modules/typescript/lib/tsserverlibrary.js" }, "environment" = "node" }
# config = { "typescript" = { serverPath = "/usr/local/lib/node_modules/typescript/lib/tsserverlibrary.js" }, "environment" = "node" }
# config = { "typescript" = { serverPath = "/home/user/path_to_my_project/node_modules/typescript/lib/tsserverlibrary.js" }, "environment" = "node" }

# Reference
# language-server = { command = "v" }
# language-server = { command = "pylsp", args = ["--tcp"] }
# language-server = { command = "pylsp" }
# language-server = { command = "pyright-langserver", args = ["--stdio"] }
